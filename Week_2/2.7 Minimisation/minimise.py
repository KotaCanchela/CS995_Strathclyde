from testFunction import testFunction
import random
import operator
import collections


x = 1.5
y = testFunction(x)

print(f"testFunction({str(x)}) = {str(y)}")

# EXERCISE 2
def callMinima():
    x = []
    minima = {}
    y = []

    for i in [float(j) / 100 for j in range(-200, 500)]:
        # Adds all numbers that are -2 < x < 5 to the list called listNum
        x.append(i)

    for i in x:
        ans = testFunction(i)
        y += [ans]

    for num in range(len(y) - 1):
        if num > 1:
            if y[num] < y[num - 1] and y[num] < y[num + 1]:
                minima[x[num]] = y[num]


    newMinimaX = []
    for key in minima.keys():
        newMinimaX += [key]
    newMinimaX.sort()


    return minima

# EXERCISE 3

def getRandMinima():
    """
    Returns the x value to the two minima generated by random numbers between -2 and 5
    """
    threeRandValX = []
    threeRandValY = []
    coordinates = {}
    coordinatesKeys = []
    coordinatesValues = []
    # Appends the x values with their corresponding y values to two separate lists then adds it to the dictionary
    for i in range(3):
        x = random.uniform(-2., 5.)
        threeRandValX.append(x)
        y = testFunction(x)
        threeRandValY.append(testFunction(x))
        coordinates[x] = y

    # Sort the list
    sorted([(value, key) for (key, value) in coordinates.items()])

    # Since the dictionary was recently sorted, we can remove the largest value from the dict by removing the last item added
    coordinates.popitem()

    for key in coordinates.keys():
        coordinatesKeys.append(key)
    for value in coordinates.values():
        coordinatesValues.append(value)

    while coordinatesValues[1] - coordinatesValues[0] < 0.001:
        newNum = random.uniform(coordinatesValues[0], coordinatesValues[1])
        coordinates[newNum] = testFunction(newNum)
        coordinatesKeys.append(newNum)
        coordinatesValues.append(testFunction(newNum))
        coordinatesKeys.sort()
        coordinatesValues.sort()
        coordinatesKeys.pop(-1)
        coordinatesValues.pop(-1)
        sorted([(value, key) for (key, value) in coordinates.items()])
        coordinates.popitem()

    newCoords = []

    for key in coordinates.keys():
        newCoords.append(round(key, 2))


    return f"The x value indexes for the random values chosen are {newCoords}"



if __name__ == "__main__":
    print(callMinima())
    print(getRandMinima())

